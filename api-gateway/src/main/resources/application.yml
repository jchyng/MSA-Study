#서버 실행 포트 지정
server:
  port: 8000

#eureka client 등록
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

#eureka server에 client로 등록될 application name 지정
spring:
  application:
    name: api-gateway-service
  #Spring Cloud Config 등록
  config:
    import: "optional:configserver:http://localhost:8888/"
  #profiles 지정
  profiles:
    active: dev
  #Config file name 등록
  cloud:
    config:
      name: ecommerce
  #gateway 설정
    gateway:
      #공용 필터 등록
      default-filters:                #filters등록 (모든 서비스에 적용됨 & 디폴트 필터가 기본적으로 실행 우선순위가 높다)
        - name: GlobalFilter          #사용할 필터 클래스명
      #라우트 정보 등록
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie  #RequestHeader에 기본 적으로 저장된 쿠키 값을 삭제 = 매번 새로운 데이터로 인식하기 위해
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} #user-service를 지우고 전달

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter   #GET 방식에만 인증 필터를 적용

#            인증 없이 사용하고 싶다면 이런식으로 따로 추가
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/welcome
#            - Method=GET
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

#token
token:
  secret: user_token

#Actuator
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace

#Debugging setting
logging:
  level:
    com.example.springcloud: DEBUG
